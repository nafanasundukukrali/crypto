{"version":3,"file":"bundle.2eaeb0783b58df0b9c74.js","mappings":"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","sources":["webpack://crypto/./src/components/Loader/Loader.tsx","webpack://crypto/./src/config/routes.ts","webpack://crypto/./src/components/Card/Card.tsx","webpack://crypto/./src/components/Card/Card.module.scss?9f8e","webpack://crypto/./src/utils/meta.ts","webpack://crypto/./src/pages/CoinsCard/components/CoinsGraph/CoinsGraph.tsx","webpack://crypto/./src/pages/CoinsCard/components/CoinsGraph/CoinsGraph.module.scss?2940","webpack://crypto/./src/pages/CoinsCard/components/PeriodBar/PeriodBar.module.scss?9486","webpack://crypto/./src/pages/CoinsCard/components/PeriodBar/PeriodBar.tsx","webpack://crypto/./src/store/CoinsCardStore/CoinsCardStore.ts","webpack://crypto/./src/store/RootStore/CurrencyParamsStore/CurrencyAndSortTypeParamsStore.ts","webpack://crypto/./src/store/RootStore/QueryParamsStore/QuerryParamsStore.ts","webpack://crypto/./src/store/RootStore/instance.ts","webpack://crypto/./src/store/RootStore/RootStore.ts","webpack://crypto/./src/store/RootStore/hooks/useCurrencyParamStore.ts","webpack://crypto/./src/utils/useLocalStore.ts","webpack://crypto/./src/pages/CoinsCard/CoinsCard.module.scss?e1b0","webpack://crypto/./src/pages/CoinsCard/CoinsCard.tsx","webpack://crypto/./src/components/CardsList/components/CardListBody/components/CoinSmallGraph/CoinSmallGraph.tsx","webpack://crypto/./src/components/CardsList/components/CardListBody/components/CoinSmallGraph/CoinSmallGraph.module.scss?62bb","webpack://crypto/./src/components/CardsList/components/CardListBody/CardListBody.tsx","webpack://crypto/./src/components/ErrorReadDataMessage/ErrorReadDataMessage.tsx","webpack://crypto/./src/models/CoinsLIst/CoinsListTypes.ts","webpack://crypto/./src/components/Button/Button.tsx","webpack://crypto/./src/store/CoinsListStore/CoinsListStore.ts","webpack://crypto/./src/components/CardsList/CardsList.tsx","webpack://crypto/./src/pages/Market/components/ChooseSortTypeBar/ChooseSortTypeBar.module.scss?a3cb","webpack://crypto/./src/pages/Market/components/ChooseSortTypeBar/ChooseSortTypeBar.tsx","webpack://crypto/./src/components/MultiDropdown/components/MultiDropdownButton/MultiDropdownButton.tsx","webpack://crypto/./src/components/MultiDropdown/MultiDropdown.module.scss?203d","webpack://crypto/./src/components/MultiDropdown/MultiDropdown.tsx","webpack://crypto/./src/pages/Market/components/MarketHeader/MarketHeader.module.scss?90a9","webpack://crypto/./src/pages/Market/components/MarketHeader/MarketHeader.tsx","webpack://crypto/./src/store/MarketStore/MarketStore.ts","webpack://crypto/./src/pages/Market/Market.tsx","webpack://crypto/./src/pages/Market/Market.module.scss?5f9b","webpack://crypto/./src/components/Button/Button.module.scss?9cba","webpack://crypto/./src/components/Input/Input.tsx","webpack://crypto/./src/pages/Search/Search.tsx","webpack://crypto/./src/store/RootStore/hooks/useQueryParamsInit.ts","webpack://crypto/./src/pages/Search/Search.module.scss?8fd3","webpack://crypto/./src/App/App.tsx","webpack://crypto/./src/App/App.module.scss?045e","webpack://crypto/./src/index.tsx"],"sourcesContent":["import React from \"react\";\n\nimport cn from \"classnames\";\n\nimport \"./Loader.css\";\n\n/** Возможные значения размера лоадера */\nenum LoaderSize {\n  s = \"s\",\n  m = \"m\",\n  l = \"l\",\n}\n\n/** Пропсы, которые принимает компонент Loader */\ntype LoaderProps = {\n  loading?: boolean;\n  size?: LoaderSize;\n  className?: string;\n};\n\nconst Loader: React.FC<LoaderProps> = ({\n  loading = true,\n  size = LoaderSize.m,\n  className,\n}) => {\n  return loading ? (\n    <div className={cn(`loader_size-${size}`, className, \"loader_position\")}>\n      <svg\n        className=\"loader__svg_animation\"\n        version=\"1.1\"\n        baseProfile=\"full\"\n        width=\"100%\"\n        height=\"100%\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g fill=\"none\" strokeWidth=\"3\">\n          <circle\n            cx=\"50%\"\n            cy=\"50%\"\n            r=\"40%\"\n            stroke=\"#6C757D\"\n            strokeDasharray=\"360 20\"\n            strokeDashoffset=\"360\"\n          />\n        </g>\n      </svg>\n    </div>\n  ) : null;\n};\n\nexport default Loader;\n","const ROUTES = {\n  MARKET: \"/\",\n  COINS_CARD: \"/Card/:id\",\n  SEARCH: \"/Search\",\n};\n\nexport default ROUTES;\n","import React from \"react\";\n\nimport styles from \"./Card.module.scss\";\n\n/** Пропсы, которые принимает компонент Card */\ntype CardProps = {\n  /** URL изображения */\n  image: string;\n  /** Заголовок карточки */\n  title: React.ReactNode;\n  /** Подзаголовок карточки */\n  subtitle: React.ReactNode;\n  /** Содержимое карточки (футер/боковая часть), может быть пустым */\n  content?: React.ReactNode;\n  /** Клик на карточку */\n  onClick?: React.MouseEventHandler;\n  /** Функция для ref для оследнего элеммента */\n  refEndFunction?: (node: any) => void;\n};\nconst Card: React.FC<CardProps> = ({\n  image,\n  title,\n  subtitle,\n  content,\n  onClick,\n  refEndFunction,\n}) => {\n  return (\n    <div ref={refEndFunction} onClick={onClick} className={styles[\"card\"]}>\n      <img src={image} alt=\"\" className={styles[\"card__mainImg\"]} />\n      <title className={styles[\"card__title\"]}>{title}</title>\n      <span className={styles[\"card__subtitle\"]}>{subtitle}</span>\n      <div className={styles[\"card__userContent\"]}>{content}</div>\n    </div>\n  );\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"t3s26QVSgcFUkHVBkvzg\",\"card__mainImg\":\"Ckkdf72tAtT70cgrVOSC\",\"card__title\":\"qd6yvPCVIllmofRExp1H\",\"card__subtitle\":\"RCAYMC7D6MTAbelNiixE\",\"card__userContent\":\"cWcHgEr72D10hRGFoIMS\"};","export enum Meta {\n  initial = \"initial\",\n  loading = \"loading\",\n  error = \"error\",\n  success = \"success\",\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport Loader from \"@components/Loader\";\nimport axios from \"axios\";\nimport { createChart, IChartApi, UTCTimestamp } from \"lightweight-charts\";\n\nimport styles from \"./CoinsGraph.module.scss\";\n\ntype CoinsGraphProps = {\n  id: string;\n  timing: number;\n  currency: string;\n};\n\nconst CoinsGraph: React.FC<CoinsGraphProps> = ({ id, timing, currency }) => {\n  const chartContainerRef = useRef();\n  const [loading, setLoading] = useState(true);\n  const [graphValue, setGraphValue] = useState<Object>([]);\n  const [error, setError] = useState(false);\n  const [chart, setChart] = useState<IChartApi | null>();\n\n  const getSparklineData = useCallback(async () => {\n    const prepareData = (prices: any[]) => {\n      const resultData = [];\n\n      if (timing === 1) {\n        let time = new Date();\n        time.setTime(Date.now() + 2 * 60 * 60 * 1000);\n\n        for (let i = 0; i <= 12; i++) {\n          resultData.push({\n            value: prices[i][1],\n            time: Math.round(\n              (time.getTime() + i * 5 * 60 * 1000) / 1000\n            ) as UTCTimestamp,\n          });\n        }\n      } else {\n        prices.forEach((el) =>\n          resultData.push({\n            time: Math.round(el[0] / 1000) as UTCTimestamp,\n            value: el[2],\n          })\n        );\n      }\n      // eslint-disable-next-line no-console\n      // console.log(typeof resultData);\n      return resultData;\n    };\n\n    let url: string = \"\";\n    if (timing < 24) {\n      url = `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=1`;\n    } else if (timing >= 24) {\n      url = `https://api.coingecko.com/api/v3/coins/${id}/ohlc?vs_currency=${currency}&days=${\n        timing / 24\n      }`;\n    } else {\n      setError(true);\n      return;\n    }\n\n    setLoading(true);\n    const result = await axios.get(url);\n\n    try {\n      const status = result.status;\n      const data = result.data;\n      if (status !== 200 || Object.keys(data).length === 0) {\n        setError(true);\n        setLoading(false);\n      } else {\n        setGraphValue([...prepareData(timing < 24 ? data.prices : data)]);\n      }\n    } catch (err) {\n      setError(true);\n    }\n    setLoading(false);\n  }, [currency, id, timing]);\n\n  useEffect(() => {\n    getSparklineData()\n      // .then(() => {\n      //   // @ts-ignore\n      //   setChart(createChart(chartContainerRef.current));\n      // })\n      .catch(() => {});\n  }, [currency, getSparklineData, id, timing]);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (graphValue.length && chartContainerRef.current) {\n      // @ts-ignore\n      const chart = createChart(chartContainerRef.current, {});\n\n      if (timing <= 24)\n        chart.applyOptions({\n          timeScale: {\n            timeVisible: true,\n            secondsVisible: true,\n          },\n        });\n      const lineSerial = chart.addLineSeries({\n        lineWidth: 3,\n        color: styles[\"blue\"],\n      });\n      // @ts-ignore\n      lineSerial.setData(graphValue);\n      chart.timeScale().fitContent();\n    }\n  }, [graphValue]);\n\n  const LoadingStatement = () => {\n    return loading && !error && <Loader />;\n  };\n\n  const GraphStatement = () => {\n    return (\n      !loading &&\n      !error && (\n        // @ts-ignore\n        <div ref={chartContainerRef} className={styles[\"CoinGraph\"]} />\n      )\n    );\n  };\n  // @ts-ignore\n  return (\n    <>\n      {LoadingStatement()}\n      {GraphStatement()}\n    </>\n  );\n};\n\nexport default CoinsGraph;\n","// extracted by mini-css-extract-plugin\nexport default {\"blue\":\"#0063f5\",\"CoinGraph\":\"iCVk_fSJ4S7GZmG6cDgZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"PeriodBar__main-block\":\"J6NhZRQ9jd0tUSOnHVo3\",\"PeriodBar__choose-variant\":\"pTVA6_bVia14F8aYirBK\",\"PeriodBar__choose-variant_active\":\"XMvNdtL9e1_ORckbU5CA\"};","import React, { useCallback, useState } from \"react\";\n\nimport cn from \"classnames\";\n\nimport styles from \"./PeriodBar.module.scss\";\n\ntype PeriodBarProps = {\n  onChange: (period: number) => void;\n};\n\nconst PeriodTypes = {\n  \"1 H\": 1,\n  \"24 H\": 24,\n  \"1 W\": 7 * 24,\n  \"1 M\": 30 * 24,\n  \"6 M\": 180 * 24,\n  \"1 Y\": 365 * 24,\n  All: 365 * 24,\n};\n\nconst PeriodBar: React.FC<PeriodBarProps> = ({ onChange }) => {\n  const [activePeriod, setActivePeriod] = useState(\"1H\");\n\n  const changeActiveState = useCallback(\n    (newActive: string) => {\n      setActivePeriod(newActive);\n      // @ts-ignore\n      onChange(PeriodTypes[newActive]);\n    },\n    [activePeriod]\n  );\n\n  return (\n    <ul className={styles[\"PeriodBar__main-block\"]}>\n      {Object.keys(PeriodTypes).map((el) => (\n        <li\n          className={cn(\n            styles[\"PeriodBar__choose-variant\"],\n            activePeriod === el\n              ? styles[\"PeriodBar__choose-variant_active\"]\n              : null\n          )}\n          onClick={() => changeActiveState(el)}\n          key={el}\n        >\n          {\n            // @ts-ignore\n            <a className={styles[\"PeriodBar__link__value\"]}>{el}</a>\n          }\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default PeriodBar;\n","import { ILocalStore } from \"@utils/useLocalStore\";\nimport axios from \"axios\";\nimport {\n  action,\n  computed,\n  makeObservable,\n  observable,\n  runInAction,\n} from \"mobx\";\n\ntype PrivateFields =\n  | \"_loading\"\n  | \"_error\"\n  | \"_coinMainData\"\n  | \"_actualDatePeriod\";\n\nexport default class CoinsCardStore implements ILocalStore {\n  private _loading: boolean = false;\n  private _error: boolean = false;\n  private _coinMainData: { [p: string]: any } = {};\n  private _actualDatePeriod: number = 1;\n\n  constructor() {\n    makeObservable<CoinsCardStore, PrivateFields>(this, {\n      _loading: observable,\n      _error: observable,\n      _coinMainData: observable.ref,\n      _actualDatePeriod: observable,\n      loading: computed,\n      error: computed,\n      coinMainData: computed,\n      actualDatePeriod: computed,\n      fetchData: action.bound,\n    });\n  }\n\n  async fetchData(id?: string) {\n    const getCoinInformation = async () => {\n      this._loading = true;\n\n      try {\n        const result = await axios.get(\n          `https://api.coingecko.com/api/v3/coins/${id}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=true`\n        );\n        const status = result.status;\n        const data = result.data;\n        if (status !== 200 || Object.keys(data).length === 0) {\n          this._error = true;\n        } else {\n          return data;\n        }\n      } catch (err) {\n        this._error = true;\n      }\n      return null;\n    };\n\n    await runInAction(async () => {\n      try {\n        this._coinMainData = await getCoinInformation();\n        // if (Object.keys(data).length) this._coinMainData = data;\n        // else this._error = true;\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log(e);\n        this._error = true;\n      }\n      this.loading = false;\n    });\n  }\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  set loading(value: boolean) {\n    this._loading = value;\n  }\n\n  get error(): boolean {\n    return this._error;\n  }\n\n  set error(value: boolean) {\n    this._error = value;\n  }\n\n  get coinMainData(): { [p: string]: any } {\n    return this._coinMainData;\n  }\n\n  set coinMainData(value: { [p: string]: any }) {\n    this._coinMainData = value;\n  }\n\n  get actualDatePeriod(): number {\n    return this._actualDatePeriod;\n  }\n\n  set actualDatePeriod(value: number) {\n    this._actualDatePeriod = value;\n  }\n\n  destroy(): void {\n    // TODO\n  }\n}\n","import { Option } from \"@components/MultiDropdown/MultiDropdown\";\nimport axios from \"axios\";\nimport getSymbolFromCurrency from \"currency-symbol-map\";\nimport {\n  action,\n  computed,\n  makeObservable,\n  observable,\n  runInAction,\n} from \"mobx\";\n\ntype PrivateField =\n  | \"_currencyList\"\n  | \"_selectedCurrencyList\"\n  | \"_selectedCurrencySymbol\"\n  | \"_selectedSortType\";\n\nexport default class CurrencyAndSortTypeParamsStore {\n  private _currencyList: Option[] = [];\n  private _selectedCurrencyList: Option[] = [];\n  private _selectedCurrencySymbol: string | undefined = \"\";\n  private _selectedSortType: string = \"market_cap_desc\";\n\n  constructor() {\n    makeObservable<CurrencyAndSortTypeParamsStore, PrivateField>(this, {\n      _currencyList: observable.ref,\n      _selectedCurrencyList: observable.ref,\n      _selectedCurrencySymbol: observable,\n      _selectedSortType: observable,\n      prepareCurrencyDate: action,\n      getCurrencyList: action,\n      selectedSortType: computed,\n      selectedCurrencyList: computed,\n    });\n\n    runInAction(() => {\n      this.getCurrencyList().then(() => {\n        let string = localStorage.getItem(\"selectedCurrency\");\n\n        if (string) {\n          const value = JSON.parse(string);\n\n          let counter = 0;\n          for (let i = 0; i < value.length; i++)\n            for (let j = 0; j < this._currencyList.length; j++)\n              if (value[i][\"key\"] === this._currencyList[j][\"key\"]) {\n                counter++;\n                break;\n              }\n\n          if (value.length && counter === value.length)\n            this._selectedCurrencyList = value;\n          else this._selectedCurrencyList = [this._currencyList[0]];\n        } else {\n          this._selectedCurrencyList = [this._currencyList[0]];\n        }\n\n        this._selectedCurrencySymbol = getSymbolFromCurrency(\n          this._selectedCurrencyList[0][\"key\"]\n        );\n      });\n    });\n  }\n\n  get selectedCurrencySymbol(): string {\n    return this._selectedCurrencySymbol ? this._selectedCurrencySymbol : \"\";\n  }\n\n  prepareCurrencyDate(userCurrencyList: string[]): Option[] {\n    const result: Option[] = [];\n\n    userCurrencyList.forEach((el) =>\n      result.push({ key: el, value: `Market-${el.toUpperCase()}` })\n    );\n\n    return result;\n  }\n\n  async getCurrencyList() {\n    const newCurrencyList = await axios({\n      method: \"get\",\n      url: \"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\",\n    });\n\n    try {\n      const { status, data } = newCurrencyList;\n      runInAction(() => {\n        if (status === 200) this._currencyList = this.prepareCurrencyDate(data);\n      });\n    } catch (e) {}\n  }\n\n  get currencyList(): Option[] {\n    return this._currencyList;\n  }\n\n  get selectedSortType(): string {\n    return this._selectedSortType;\n  }\n\n  set selectedSortType(newSortType: string) {\n    this._selectedSortType = newSortType;\n  }\n\n  get selectedCurrencyList(): Option[] {\n    return this._selectedCurrencyList;\n  }\n\n  set selectedCurrencyList(newList: Option[]) {\n    if (newList.length) {\n      this._selectedCurrencyList = newList;\n      this._selectedCurrencySymbol = getSymbolFromCurrency(\n        this._selectedCurrencyList[0][\"key\"]\n      );\n      localStorage.setItem(\n        \"selectedCurrency\",\n        JSON.stringify(this._selectedCurrencyList)\n      );\n    }\n  }\n}\n","import ROUTES from \"@config/routes\";\nimport { action, makeObservable, observable } from \"mobx\";\nimport * as qs from \"qs\";\nimport { useNavigate } from \"react-router-dom\";\n\ntype PrivateFields = \"_params\" | \"_search\";\n\nexport default class QueryParamsStore {\n  private _params: qs.ParsedQs = {};\n  private _search: string = \"\";\n\n  constructor() {\n    makeObservable<QueryParamsStore, PrivateFields>(this, {\n      _params: observable.ref,\n      _search: observable,\n      setSearch: action,\n    });\n  }\n\n  get search(): string {\n    return this._search;\n  }\n\n  destroy(): void {\n    this._params = {};\n    this._search = \"\";\n  }\n\n  setSearch(search: string) {\n    if (search) {\n      search = search.startsWith(\"?\") ? search.slice(1) : search;\n\n      if (this._search !== search) {\n        this._search = search;\n        this._params = qs.parse(search);\n      }\n    }\n  }\n}\n","import RootStore from \"@store/RootStore/RootStore\";\n\nconst rootStore = new RootStore();\n\nexport default rootStore;\n","import CurrencyAndSortTypeParamsStore from \"@store/RootStore/CurrencyParamsStore/CurrencyAndSortTypeParamsStore\";\nimport QueryParamsStore from \"@store/RootStore/QueryParamsStore/QuerryParamsStore\";\nimport rootStore from \"@store/RootStore/instance\";\n\nexport default class RootStore {\n  readonly query = new QueryParamsStore();\n  readonly currency = new CurrencyAndSortTypeParamsStore();\n  readonly coinsOnePageCoinsCount = 10;\n}\n","import rootStore from \"@store/RootStore\";\nimport CurrencyAndSortTypeParamsStore from \"@store/RootStore/CurrencyParamsStore/CurrencyAndSortTypeParamsStore\";\n\nexport const useCurrencyParamStore = (): CurrencyAndSortTypeParamsStore => {\n  return rootStore.currency;\n};\n","import { useEffect, useRef } from \"react\";\n\nexport interface ILocalStore {\n  destroy: () => void;\n}\nexport const useLocalStore = <T extends ILocalStore>(creator: () => T) => {\n  const container = useRef<null | T>(null);\n  if (container.current === null) {\n    container.current = creator();\n  }\n\n  useEffect(() => {\n    container.current?.destroy();\n  }, []);\n\n  return container.current;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"CoinsCard__main-block\":\"Oqp53GOBa55I7tPnN9NQ\",\"CoinsCard__main-block__header\":\"pIxUtUuEQlPY2zaDmauM\",\"CoinsCard__main-block__header__return-button\":\"boFz3nVJkJaQCihVm2wb\",\"CoinsCard__main-block__header__coin-attributes\":\"slwq4bp0meRQJ9UGaxBN\",\"CoinsCard__main-block__graph-header\":\"CDih2beMjRwxpEAmfrka\",\"CoinsCard__main-block__graph\":\"FJTQk_jhIAcmu5JRWHtr\",\"CoinsCard__main-block__choose-period\":\"FQjez6mHF_kOhjvs2wRa\"};","import React, { useCallback, useEffect } from \"react\";\n\nimport Card from \"@components/Card\";\nimport Loader from \"@components/Loader\";\nimport CoinsGraph from \"@pages/CoinsCard/components/CoinsGraph\";\nimport PeriodBar from \"@pages/CoinsCard/components/PeriodBar\";\nimport CoinsCardStore from \"@store/CoinsCardStore\";\nimport { useCurrencyParamStore } from \"@store/RootStore/hooks/useCurrencyParamStore\";\nimport { useLocalStore } from \"@utils/useLocalStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport styles from \"./CoinsCard.module.scss\";\n\nconst CoinsCard = () => {\n  const handleCurrency = useCurrencyParamStore();\n  const coinsCardStore = useLocalStore(() => new CoinsCardStore());\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n\n  const handleReturnNavigate = useCallback(() => {\n    navigate(-1);\n  }, [navigate]);\n\n  useEffect(() => {\n    const fetch = async () => {\n      if (id) await coinsCardStore.fetchData(id);\n    };\n\n    fetch();\n  }, []);\n\n  const changeActualDatePeriod = useCallback(\n    (newPeriod: number) => {\n      coinsCardStore.actualDatePeriod = newPeriod;\n    },\n    [coinsCardStore?.actualDatePeriod]\n  );\n\n  return (\n    <>\n      {!coinsCardStore?.error &&\n        coinsCardStore?.coinMainData.hasOwnProperty(\"image\") && (\n          <div className={styles[\"CoinsCard__main-block\"]}>\n            <div className={styles[\"CoinsCard__main-block__header\"]}>\n              <button\n                className={\n                  styles[\"CoinsCard__main-block__header__return-button\"]\n                }\n                onClick={() => handleReturnNavigate()}\n              />\n              <div\n                className={\n                  styles[\"CoinsCard__main-block__header__coin-attributes\"]\n                }\n              >\n                <img\n                  src={coinsCardStore?.coinMainData[\"image\"][\"small\"]}\n                  alt=\"\"\n                  className={\n                    styles[\n                      \"CoinsCard__main-block__header__coin-attributes__img\"\n                    ]\n                  }\n                />\n                <span className={styles[\"card__title\"]}>\n                  {coinsCardStore?.coinMainData[\"name\"]}\n                </span>\n                <span className={styles[\"card__subtitle\"]}>\n                  ({coinsCardStore?.coinMainData[\"symbol\"].toUpperCase()})\n                </span>\n              </div>\n            </div>\n            <div className={styles[\"CoinsCard__main-block__graph-header\"]}>\n              <span>\n                {coinsCardStore?.coinMainData[\"market_data\"][\"current_price\"][\n                  handleCurrency.selectedCurrencyList[0][\"key\"]\n                ].toFixed(2)}\n              </span>\n              <span>\n                {\n                  coinsCardStore?.coinMainData[\"market_data\"][\n                    \"price_change_24h\"\n                  ]\n                }\n              </span>\n              <span>\n                {coinsCardStore?.coinMainData[\"market_data\"][\n                  \"price_change_percentage_24h\"\n                ].toFixed(2)}\n              </span>\n            </div>\n            <div className={styles[\"CoinsCard__main-block__graph\"]}>\n              <CoinsGraph\n                id={`${id}`}\n                currency={handleCurrency.selectedCurrencyList[0][\"key\"]}\n                timing={coinsCardStore?.actualDatePeriod}\n              />\n            </div>\n            <div className={styles[\"CoinsCard__main-block__choose-period\"]}>\n              <PeriodBar onChange={changeActualDatePeriod} />\n            </div>\n            <div className={styles[\"CoinsCard__main-block__card\"]}>\n              <Card\n                image={coinsCardStore?.coinMainData[\"image\"][\"small\"]}\n                title={coinsCardStore?.coinMainData[\"name\"]}\n                subtitle={coinsCardStore?.coinMainData[\"sumbol\"]}\n              />\n            </div>\n            <div\n              className={styles[\"CoinsCard__main-block__transactions\"]}\n            ></div>\n          </div>\n        )}\n      <Loader loading={coinsCardStore?.loading} />\n    </>\n  );\n\n  return null;\n};\n\nexport default observer(CoinsCard);\n","import React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\nimport { createChart } from \"lightweight-charts\";\n\nimport styles from \"./CoinSmallGraph.module.scss\";\nimport cn from \"classnames\";\n\ntype CoinSmallGraphProps = {\n  priceChangePercentage: number;\n  sparklineIn7d: number[];\n  currencySymbol: string | undefined;\n  price: number;\n};\n\nconst CoinSmallGraph: React.FC<CoinSmallGraphProps> = ({\n  priceChangePercentage,\n  sparklineIn7d,\n  currencySymbol,\n  price,\n}) => {\n  const chartContainerRef = useRef();\n\n  useEffect(() => {\n    // @ts-ignore\n    const chart = createChart(chartContainerRef.current, {\n      rightPriceScale: false,\n      timeScale: { visible: false },\n      overlayPriceScales: false,\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        }\n      }\n    });\n    const lineSerial = chart.addLineSeries({\n      lineWidth: 1,\n      color: priceChangePercentage < 0 ? styles[\"red\"] : styles[\"green\"],\n      crosshairMarkerVisible: false,\n    });\n    lineSerial.applyOptions({\n      baseLineVisible: false,\n      priceLineVisible: false,\n      lastValueVisible: false,\n    });\n    // @ts-ignore\n    lineSerial.setData(sparklineIn7d);\n    chart.applyOptions({\n      crosshair: {\n        vertLine: {\n          visible: false,\n          labelVisible: false,\n        },\n        horzLine: {\n          visible: false,\n          labelVisible: false,\n        },\n      },\n      handleScale: false,\n      handleScroll: false,\n    });\n    chart\n      .timeScale()\n      .setVisibleLogicalRange({ from: 0, to: sparklineIn7d.length });\n    chart.timeScale().fitContent();\n\n    return () => chart.remove();\n  }, []);\n\n  return (\n    <div className={styles['CoinSmallGraph_block']}>\n      {\n        // @ts-ignore\n        <div ref={chartContainerRef} className={styles[\"CoinSmallGraph_graph\"]} />\n      }\n      <div className={styles[\"CoinSmallGraph_price\"]}>\n        {\n        (currencySymbol ? currencySymbol : \"\").concat(price !== null ? price.toFixed(2).toString() : \"0.00\")\n        }\n      </div>\n      <div\n        className={cn(styles[\"CoinSmallGraph_pricePercentage\"],\n          priceChangePercentage >= 0 ?\n          styles[\"colorGreen\"] :\n          styles[\"colorRed\"])}\n      >\n        {\n          (priceChangePercentage > 0 ?\n            \"+\" :\n            \"\").concat((priceChangePercentage / 100).toFixed(2))\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default CoinSmallGraph;\n","// extracted by mini-css-extract-plugin\nexport default {\"red\":\"#d90429\",\"green\":\"#21bf73\",\"CoinSmallGraph_block\":\"vhrdwQVvZ61HRcDMetSS\",\"CoinSmallGraph_graph\":\"rAbVKEyYbGNV6P0R4C04\",\"CoinSmallGraph_price\":\"j8ei7sa7SkMDH2n5l9Wt\",\"CoinSmallGraph_pricePercentage\":\"SS52GJpnomnQjbOJCnjZ\",\"colorGreen\":\"n0WSANn9oDEhSSJQob_A\",\"colorRed\":\"iM8yiLJiENhl9Qg0mY03\"};","import React, { FC, useCallback, useLayoutEffect, useState } from \"react\";\n\nimport Card from \"@components/Card\";\nimport CoinSmallGraph from \"@components/CardsList/components/CardListBody/components/CoinSmallGraph\";\nimport { Virtuoso } from \"react-virtuoso\";\nimport Loader from \"@components/Loader\";\n\ntype CardListBodyProps = {\n  isVisible: boolean;\n  coinsList: { [p: string]: any }[];\n  handleCoins: (value: number) => void;\n  handleCoinNavigate: (value: string) => void;\n  symbol: string;\n  onePageCountCoins: number;\n  endList?: boolean;\n};\nconst CardListBody: FC<CardListBodyProps> = ({\n  isVisible,\n  coinsList,\n  handleCoins,\n  handleCoinNavigate,\n  symbol,\n  onePageCountCoins,\n  endList\n}) => {\n  const prepareSparklineData = useCallback((data: Object[]) => {\n    const result: any[] = [];\n    data.forEach((el, index) => result.push({ value: el, time: index }));\n    return result;\n  }, []);\n\n  const Loading = () => {\n    return (\n      <Loader />\n    )\n  }\n\n  return (\n    <>\n      {isVisible && (\n        <Virtuoso\n          useWindowScroll\n          data={coinsList}\n          endReached={!endList ? handleCoins : undefined}\n          overscan={onePageCountCoins}\n          itemContent={(index: number, coin: { [p: string]: any }) => {\n            return (\n              <div id={coin[\"id\"]} key={index}>\n                <Card\n                  image={coin[\"image\"]}\n                  title={coin[\"name\"]}\n                  subtitle={coin[\"symbol\"].toUpperCase()}\n                  onClick={() => handleCoinNavigate(coin[\"id\"])}\n                  content={\n                    <CoinSmallGraph\n                      priceChangePercentage={\n                        coin[\"price_change_percentage_24h\"]\n                      }\n                      sparklineIn7d={prepareSparklineData(\n                        coin[\"sparkline_in_7d\"][\"price\"]\n                      )}\n                      currencySymbol={symbol}\n                      price={coin[\"current_price\"]}\n                    />\n                  }\n                />\n              </div>\n            );\n          }}\n          components={{ Footer: !endList ? Loading : undefined }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CardListBody;\n","import React, { FC } from \"react\";\n\ntype ErrorReadDataMessageProps = {\n  isVisible: boolean;\n};\n\nconst ErrorReadDataMessage: FC<ErrorReadDataMessageProps> = ({ isVisible }) => {\n  return (\n    <>\n      {isVisible && <p>Ошибка при загрузке данных. Перезагрузите страницу.</p>}\n    </>\n  );\n};\n\nexport default ErrorReadDataMessage;\n","import rootStore from \"@store/RootStore\";\nimport axios from \"axios\";\n\nexport const normalizeLostData = async (\n  data: { [p: string]: any }[]\n): Promise<{ [p: string]: any }[]> => {\n  const getInformation = async (id: string): Promise<{ [p: string]: any }> => {\n    const url = `https://api.coingecko.com/api/v3/coins/${id}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=true`;\n    try {\n      const result = await axios.get(url);\n      if (result.status === 200) return result.data;\n      else return [];\n    } catch (e) {\n      return [];\n    }\n  };\n\n  const getLostData = async (id: string) => {\n    const result = await getInformation(id);\n    if (result)\n      return {\n        price_change_percentage_24h:\n          result[\"market_data\"][\"price_change_percentage_24h_in_currency\"][\n            rootStore.currency.selectedCurrencyList[0][\"key\"]\n          ],\n        sparkline_in_7d: result[\"market_data\"][\"sparkline_7d\"],\n        symbol: result[\"symbol\"],\n        image: result[\"image\"][\"small\"],\n        current_price:\n          result[\"market_data\"][\"current_price\"][\n            rootStore.currency.selectedCurrencyList[0][\"key\"]\n          ],\n      };\n  };\n\n  if (data)\n    for (let i = 0; i < data.length; i++)\n      data[i] = Object.assign(data[i], await getLostData(data[i][\"id\"]));\n\n  return data;\n};\n","import React, { useMemo } from \"react\";\n\nimport cn from \"classnames\";\n\nimport Loader from \"../Loader\";\nimport styles from \"./Button.module.scss\";\n\n/** Возможные раскраски кнопки */\nenum ButtonColor {\n  /** Основная, акцентная кнопка */\n  primary = \"primary\",\n  /** Второстепенная кнопка */\n  secondary = \"secondary\",\n}\n\n/** Пропсы, который принимает компонент Button */\ntype ButtonProps = React.PropsWithChildren<{\n  /**\n   * Если true, то внутри кнопки вместе с children отображается компонент Loader\n   * Также кнопка должна переходить в состояние disabled\n   * По умолчанию - false\n   */\n  loading?: boolean;\n  /** Цвет кнопки, по умолчанию -  ButtonColor.primary*/\n  color?: ButtonColor;\n}> &\n  React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<ButtonProps> = ({\n  loading,\n  color = ButtonColor.primary,\n  children,\n  ...props\n}) => {\n  let resultClassNameList = useMemo(\n    () =>\n      cn(\n        styles[\"button\"],\n        loading || props[\"disabled\"] ? styles[\"button_disabled\"] : null,\n        styles[`button_color-${color}`],\n        props[\"className\"]\n      ),\n    [loading, props, color]\n  );\n\n  return (\n    <button disabled={loading} className={resultClassNameList} {...props}>\n      {children}\n      {loading ? <Loader /> : null}\n    </button>\n  );\n};\n\nexport default Button;\n","import { Option } from \"@components/MultiDropdown/MultiDropdown\";\nimport rootStore from \"@store/RootStore\";\nimport { Meta } from \"@utils/meta\";\nimport { ILocalStore } from \"@utils/useLocalStore\";\nimport axios from \"axios\";\nimport {\n  action,\n  computed,\n  makeObservable,\n  observable,\n  runInAction,\n} from \"mobx\";\n\nimport { normalizeLostData } from \"../../models/CoinsLIst\";\n\ntype GetCoinsListParams = {\n  initial?: boolean;\n};\n\ntype PrivateFields = \"_list\" | \"_meta\" | \"_page\" | \"_listEnd\";\n\nexport default class CoinsListStore implements ILocalStore {\n  private _list: { [p: string]: any }[] = [];\n  private _meta: Meta = Meta.initial;\n  private _page: number = 1;\n  private _listEnd: boolean = false;\n\n  constructor() {\n    makeObservable<CoinsListStore, PrivateFields>(this, {\n      _list: observable.ref,\n      _meta: observable,\n      _page: observable,\n      _listEnd: observable,\n      list: computed,\n      meta: computed,\n      page: computed,\n      listEnd: computed,\n      initCoins: action,\n      getCoinsList: action,\n    });\n\n    if (rootStore.currency.selectedCurrencyList.length !== 0)\n      this.initCoins({\n        initial: true,\n      });\n  }\n\n  get listEnd(): boolean {\n    return this._listEnd;\n  }\n\n  get list(): { [p: string]: any }[] {\n    return this._list;\n  }\n\n  get meta(): Meta {\n    return this._meta;\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  async getCoinsList(): Promise<{ [p: string]: any }[]> {\n    let url: string = \"\";\n    if (!rootStore.currency.selectedSortType)\n      rootStore.currency.selectedSortType = \"market_cap_desc\";\n\n    if (rootStore.query.search)\n      url = `https://api.coingecko.com/api/v3/search?query=${rootStore.query.search}`;\n    else\n      url = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${rootStore.currency.selectedCurrencyList[0][\"key\"]}&order=${rootStore.currency.selectedSortType}&per_page=${rootStore.coinsOnePageCoinsCount}&page=${this.page}&sparkline=true`;\n\n    const result = await axios.get(url);\n\n    return runInAction(() => {\n      if (result.status === 200) {\n        if (!rootStore.query.search) {\n          if (result.data.length < rootStore.coinsOnePageCoinsCount)\n            this._listEnd = true;\n          return result.data;\n        } else {\n          if (\n            rootStore.coinsOnePageCoinsCount * this._page >\n            result.data[\"coins\"].length\n          )\n            this._listEnd = true;\n\n          return result.data[\"coins\"].slice(\n            rootStore.coinsOnePageCoinsCount * (this._page - 1),\n            rootStore.coinsOnePageCoinsCount * this._page\n          );\n        }\n      } else {\n        throw new Error();\n      }\n    });\n  }\n\n  async initCoins(params?: GetCoinsListParams) {\n    if (params && params.initial) {\n      this._list = [];\n      this._page = 1;\n      this._listEnd = false;\n    }\n\n    this._meta = Meta.loading;\n\n    try {\n      let data = await this.getCoinsList();\n\n      if (data && rootStore.query.search) data = await normalizeLostData(data);\n\n      if (data.length) {\n        data = data.filter((element, index) => {\n          return !this._list.includes(element);\n        });\n\n        runInAction(() => {\n          this._list = [...this._list, ...data];\n          this._page++;\n          this._meta = Meta.success;\n        });\n      }\n    } catch (e) {\n      this._meta = Meta.error;\n      this._listEnd = true;\n    }\n  }\n\n  destroy(): void {\n    // TODO\n  }\n}\n","import React, { useCallback, useEffect } from \"react\";\n\nimport CardListBody from \"@components/CardsList/components/CardListBody\";\nimport ErrorReadDataMessage from \"@components/ErrorReadDataMessage\";\nimport ROUTES from \"@config/routes\";\nimport CoinsListStore from \"@store/CoinsListStore\";\nimport rootStore from \"@store/RootStore\";\nimport { useCurrencyParamStore } from \"@store/RootStore/hooks/useCurrencyParamStore\";\nimport { Meta } from \"@utils/meta\";\nimport { useLocalStore } from \"@utils/useLocalStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst CardsList = () => {\n  const coinsListStore = useLocalStore(() => new CoinsListStore());\n  const currencyRootStore = useCurrencyParamStore();\n\n  useEffect(() => {\n    const fetchData = async () =>\n      await coinsListStore?.initCoins({ initial: true });\n\n    try {\n      fetchData();\n    } catch (e) {}\n  }, [\n    currencyRootStore.selectedCurrencyList,\n    currencyRootStore.selectedSortType,\n    rootStore.query.search,\n  ]);\n\n  // Для перехода на страницу с монетой\n  const navigate = useNavigate();\n\n  const handleCoinNavigate = useCallback(\n    (id: string) => {\n      const getNewCardPath = (id: string) => {\n        return `/Card/${id}`;\n      };\n\n      const comebackPath = () => {\n        if (rootStore.query.search) return rootStore.query.search;\n        else return ROUTES.MARKET;\n      };\n\n      navigate(getNewCardPath(id), {\n        state: {\n          from: { pathname: comebackPath() },\n          currency: currencyRootStore.selectedCurrencyList,\n        },\n      });\n    },\n    [navigate, currencyRootStore.selectedCurrencyList]\n  );\n\n  const handleCoins = useCallback(\n    (something: number) => {\n      coinsListStore?.initCoins();\n    },\n    [currencyRootStore.selectedCurrencyList, currencyRootStore.selectedSortType]\n  );\n\n  // TODO: check which data gets from api\n  return (\n    <div style={{display: \"flex\", flexDirection: \"column\"}}>\n      <CardListBody\n        isVisible={coinsListStore.meta !== Meta.error}\n        coinsList={coinsListStore.list}\n        handleCoins={handleCoins}\n        handleCoinNavigate={handleCoinNavigate}\n        symbol={currencyRootStore.selectedCurrencySymbol}\n        onePageCountCoins={rootStore.coinsOnePageCoinsCount}\n        endList={coinsListStore?.listEnd}\n      />\n      <ErrorReadDataMessage isVisible={coinsListStore?.meta === Meta.error} />\n    </div>\n  );\n};\n\nexport default observer(CardsList);\n","// extracted by mini-css-extract-plugin\nexport default {\"ChooseSortTypeBar__ul\":\"SNcP8JUU0QOjS18L1hHp\",\"ChooseSortTypeBar__link\":\"OooBw_uETe3FQoGp2iJU\",\"active\":\"wbn6vWW096er77cdy9jb\"};","import React, { FC, LegacyRef, useCallback, useEffect, useRef } from \"react\";\n\nimport rootStore from \"@store/RootStore\";\nimport { observable } from \"mobx\";\n\nimport styles from \"./ChooseSortTypeBar.module.scss\";\n\ntype ChooseSortTypeBarProps = {\n  sortType: string;\n};\n\nconst ChooseSortTypeBar: FC<ChooseSortTypeBarProps> = ({ sortType }) => {\n  const handleSortType = useCallback((value: string) => {\n    rootStore.currency.selectedSortType = value;\n  }, []);\n\n  const sortTypes: { [p: string]: string } = {\n    All: \"market_cap_desc\",\n    Gainer: \"gecko_desc\",\n    Looser: \"gecko_asc\",\n  };\n\n  return (\n    <ul className={styles[\"ChooseSortTypeBar__ul\"]}>\n      {Object.keys(sortTypes).map((key: string) => (\n        <li\n          key={key}\n          className={`${styles[\"ChooseSortTypeBar__link\"]} ${\n            sortType === sortTypes[key] ? styles[\"active\"] : null\n          }`}\n          onClick={() => handleSortType(sortTypes[key])}\n        >\n          <a>{key}</a>\n        </li>\n      ))}\n      <li key=\"Favourites\" className={styles[\"ChooseSortTypeBar__link\"]}>\n        <a>Favourites</a>\n      </li>\n    </ul>\n  );\n};\n\nexport default ChooseSortTypeBar;\n","import React, { useEffect } from \"react\";\n\nimport { Option } from \"@components/MultiDropdown/MultiDropdown\";\nimport styles from \"@components/MultiDropdown/MultiDropdown.module.scss\";\nimport cn from \"classnames\";\n\ntype MultiDropdownButtonProps = {\n  isVisible: boolean;\n  onClick: () => void;\n  disabled?: boolean;\n  actualValueString: string;\n};\n\nconst MultiDropdownButton: React.FC<MultiDropdownButtonProps> = ({\n  isVisible,\n  onClick,\n  disabled,\n  actualValueString,\n}) => {\n  return (\n    <button\n      key=\"multiDropdown__block__mainClickButton\"\n      className={cn(\n        styles[\"multiDropdown__block__mainClickButton\"],\n        isVisible && styles[\"multiDropdown__block__mainClickButton__clicked\"]\n      )}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      <div className={styles[\"multiDropdown__block__mainClickButton__content\"]}>\n        {actualValueString}\n      </div>\n      <div\n        className={cn(\n          styles[\"multiDropdown__block__mainClickButton__icon\"],\n          isVisible && styles[\"multiDropdown__block__mainClickButton__icon_clicked_1\"]\n        )}\n      ></div>\n    </button>\n  );\n};\n\nexport default React.memo(MultiDropdownButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"multiDropdown__block\":\"x6dYoZJw0N3dKEco8wjI\",\"multiDropdown__block__mainClickButton\":\"yX0p1019xiLs8HGza3dg\",\"multiDropdown__block__mainClickButton__clicked\":\"WrI02GoFwJd6LYTbBQ_q\",\"multiDropdown__block__mainClickButton__content\":\"S8P5f12WQtSz_uNofj5H\",\"multiDropdown__block__mainClickButton__icon\":\"oFO2PoxO0xHQIXNwjn2h\",\"multiDropdown__block__mainClickButton__icon_clicked_1\":\"Y2AJbmd5vP18u7ax6z3E\",\"multiDropdown__block__optionsList\":\"hvrnGwhtuNCvOIRunEHL\",\"multiDropdown__block__optionsList__option\":\"SmzczONYCkHs5guuJzkT\"};","import React, { memo, useCallback, useEffect, useState } from \"react\";\n\nimport MultiDropdownButton from \"@components/MultiDropdown/components/MultiDropdownButton\";\nimport rootStore from \"@store/RootStore\";\n\nimport styles from \"./MultiDropdown.module.scss\";\n\nexport type Option = {\n  /** Ключ варианта, используется для отправки на бек/использования в коде */\n  key: string;\n  /** Значение варианта, отображается пользователю */\n  value: string;\n};\n\n/** Пропсы, которые принимает компонент Dropdown */\ntype MultiDropdownProps = {\n  /** Массив возможных вариантов для выбора */\n  options: Option[];\n  /** Текущие выбранные значения поля, массив может быть пустым */\n  value: Option[];\n  /** Callback, вызываемый при выборе варианта */\n  onChange: (value: Option[]) => void;\n  /** Заблокирован ли дропдаун */\n  disabled?: boolean;\n  /** Преобразовать выбранные значения в строку. Отображается в дропдауне в качестве выбранного значения */\n  pluralizeOptions: (value: Option[]) => string;\n};\n\nconst MultiDropdown: React.FC<MultiDropdownProps> = ({\n  options,\n  value,\n  onChange,\n  disabled,\n  pluralizeOptions,\n}) => {\n  const [isVisible, setVisible] = useState(false);\n  const [actualValueString, setValueString] = useState(pluralizeOptions(value))\n\n  const handleActualValueString = useCallback((value: Option[]) => {\n    setValueString(pluralizeOptions(value));\n  }, []);\n\n  const handleValueList = useCallback(\n    (el: Option) => {\n      if (value.indexOf(el) === -1) {\n        value = [el];\n      } else {\n        value = [\n          ...value.slice(0, value.indexOf(el)),\n          ...value.slice(value.indexOf(el) + 1),\n        ];\n      }\n      onChange(value);\n      handleActualValueString(value);\n    },\n    [value]\n  );\n\n  const handleVisible = useCallback(\n    () => setVisible((isVisible) => !isVisible),\n    []\n  );\n\n  return (\n    <div key=\"multiDropdown__block\" className={\"multiDropdown__block\"}>\n      <MultiDropdownButton\n        isVisible={isVisible}\n        onClick={handleVisible}\n        actualValueString={actualValueString}\n      />\n      {isVisible && !disabled && (\n        <div\n          key=\"multiDropdown__block__optionsList\"\n          className={styles[\"multiDropdown__block__optionsList\"]}\n        >\n          {options.map((el) => (\n            <div\n              key={el.key}\n              className={styles[\"multiDropdown__block__optionsList__option\"]}\n              onClick={() => handleValueList(el)}\n            >\n              <div>{el.value}</div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MultiDropdown);\n","// extracted by mini-css-extract-plugin\nexport default {\"MarketHeader__main-block\":\"uWWPDwXIY6WKJaEVrsJ3\",\"MarketHeader__market-status\":\"YNbbUzDsA3a6Ljw5tTvL\",\"MarketHeader__market-status__header\":\"C5xNCdVSjO0Md22HNq4Z\",\"MarketHeader__market-status__header__span_green\":\"UTLkleqnWAfae7waapgS\",\"MarketHeader__market-status__header__span_red\":\"hGaAQX2F150p0RPH3Y7o\",\"MarketHeader__search-item\":\"mM3MnDNhrInVk5_OP2wu\",\"MarketHeader__coins-item\":\"Zfvsla1qDPzFD7Z28Sdb\",\"MarketHeader__currency-dropdown\":\"zTiNJ9FgzGOqg4CrzJM5\"};","import React, { useCallback, useEffect, useState } from \"react\";\n\n// @ts-ignore\nimport search_icon from \"@components/images/search_icon.svg\";\nimport MultiDropdown from \"@components/MultiDropdown/MultiDropdown\";\nimport { Option } from \"@components/MultiDropdown/MultiDropdown\";\nimport ROUTES from \"@config/routes\";\nimport { useCurrencyParamStore } from \"@store/RootStore/hooks/useCurrencyParamStore\";\nimport cn from \"classnames\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport style from \"./MarketHeader.module.scss\";\n\ntype MarketHeaderProps = {\n  capChangePercentage: number;\n};\n\nconst MarketHeader: React.FC<MarketHeaderProps> = ({ capChangePercentage }) => {\n  // Для перехода на страницу с монетой\n  const navigate = useNavigate();\n\n  const handleCurrency = useCurrencyParamStore();\n\n  const handleSearchNavigate = useCallback(() => {\n    navigate(ROUTES.SEARCH, { state: { location: ROUTES.MARKET } });\n  }, [navigate]);\n\n  const handleSelectedCurrency = useCallback(\n    (value: Option[]) => {\n      handleCurrency.selectedCurrencyList = value;\n    },\n    [handleCurrency.selectedCurrencyList]\n    // [onClick]\n  );\n\n  const handleValueResult = useCallback(\n    (value: Option[]) => {\n      let resultString = \"\";\n      return value.reduce(\n        (accumulator: string, currentValue) =>\n          accumulator + currentValue.value + \" \",\n        resultString\n      );\n    },\n    [handleCurrency.selectedCurrencyList]\n  );\n\n  // eslint-disable-next-line no-console\n  // console.log(\"Market had been Rendered!\");\n  return (\n    <div className={style[\"MarketHeader__main-block\"]}>\n      <div className={style[\"MarketHeader__market-status\"]}>\n        <div className={style[\"MarketHeader__market-status__header\"]}>\n          Market is {capChangePercentage >= 0 ? \" up \" : \" down \"}\n          <span\n            className={\n              style[\n                `MarketHeader__market-status__header__span_${\n                  capChangePercentage > 0 ? \"green\" : \"red\"\n                }`\n              ]\n            }\n          >\n            {capChangePercentage.toFixed(2)}\n          </span>\n        </div>\n        <span>In the past 24 hours</span>\n      </div>\n      <div className={style[\"MarketHeader__search-item\"]}>\n        <img src={search_icon} onClick={handleSearchNavigate} />\n      </div>\n      <div className={style[\"MarketHeader__coins-item\"]}>Coins</div>\n      <div className={style[\"MarketHeader__currency-dropdown\"]}>\n        <MultiDropdown\n          options={handleCurrency.currencyList}\n          value={handleCurrency.selectedCurrencyList}\n          onChange={handleSelectedCurrency}\n          pluralizeOptions={handleValueResult}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MarketHeader;\n","import { ILocalStore } from \"@utils/useLocalStore\";\nimport axios from \"axios\";\nimport {\n  action,\n  computed,\n  makeObservable,\n  observable,\n  runInAction,\n} from \"mobx\";\n\ntype PrivateFields = \"_dailyMarketChange\" | \"_error\";\n\nexport default class MarketStore implements ILocalStore {\n  private _dailyMarketChange: number | null = null;\n  private _error: boolean = false;\n\n  constructor() {\n    makeObservable<MarketStore, PrivateFields>(this, {\n      _dailyMarketChange: observable,\n      _error: observable,\n      dailyMarketChange: computed,\n      error: computed,\n      fetchData: action,\n    });\n\n    this.fetchData();\n  }\n\n  async fetchData() {\n    const dailyMarketChange = await axios({\n      method: \"get\",\n      url: \"https://api.coingecko.com/api/v3/global\",\n    });\n\n    runInAction(() => {\n      try {\n        const { status, data } = dailyMarketChange;\n\n        if (status === 200 && Object.keys(data).length)\n          this._dailyMarketChange =\n            dailyMarketChange.data.data.market_cap_change_percentage_24h_usd;\n        else this._error = true;\n      } catch (e) {\n        this._error = true;\n      }\n    });\n  }\n\n  get dailyMarketChange(): number | null {\n    return this._dailyMarketChange;\n  }\n\n  set dailyMarketChange(value: number | null) {\n    this._dailyMarketChange = value;\n  }\n\n  get error(): boolean {\n    return this._error;\n  }\n\n  set error(value: boolean) {\n    this._error = value;\n  }\n\n  destroy(): void {\n    // TODO\n  }\n}\n","import React, { useEffect } from \"react\";\n\nimport CardsList from \"@components/CardsList/CardsList\";\nimport ErrorReadDataMessage from \"@components/ErrorReadDataMessage\";\nimport ChooseSortTypeBar from \"@pages/Market/components/ChooseSortTypeBar\";\nimport MarketHeader from \"@pages/Market/components/MarketHeader\";\nimport MarketStore from \"@store/MarketStore\";\nimport rootStore from \"@store/RootStore\";\nimport { useCurrencyParamStore } from \"@store/RootStore/hooks/useCurrencyParamStore\";\nimport { useLocalStore } from \"@utils/useLocalStore\";\nimport { observer } from \"mobx-react-lite\";\n\nimport styles from \"./Market.module.scss\";\n\nconst Market = () => {\n  const currencyAndSortStore = useCurrencyParamStore();\n  const marketStore = useLocalStore(() => new MarketStore());\n  marketStore?.fetchData();\n\n  // Статус состояния рынка и получение спсика валют\n  useEffect(() => {\n    if (marketStore)\n      marketStore.fetchData();\n  }, [marketStore, marketStore?.dailyMarketChange]);\n\n  useEffect(() => {\n    if (marketStore)\n      marketStore.fetchData();\n  }, []);\n\n  return (\n    <>\n      {marketStore && marketStore.dailyMarketChange !== null &&\n        currencyAndSortStore.currencyList.length !== 0 && (\n          <div className={styles[\"Market__main-div\"]}>\n            <MarketHeader capChangePercentage={marketStore.dailyMarketChange} />\n            <ChooseSortTypeBar sortType={rootStore.currency.selectedSortType} />\n            <div className={styles[\"Market__CardsEvents\"]}>\n              <CardsList />\n            </div>\n          </div>\n        )}\n      <ErrorReadDataMessage isVisible={!marketStore || marketStore?.error} />\n    </>\n  );\n};\n\nexport default observer(Market);\n","// extracted by mini-css-extract-plugin\nexport default {\"Market__main-div\":\"_wmfpYeE0Fy3t8eaBtod\",\"Market__CardsEvents\":\"SnXNZdmFN19_Z5Rpcump\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"b_aG7bzo5aM2mIR7O3BA\",\"button_color-primary\":\"d688h0GzvJCcheM71yPI\",\"button_color-secondary\":\"vn1j1uVyybej_3ML3vnf\"};","import React, { ChangeEvent, useCallback } from \"react\";\nimport \"./Input.module.scss\";\n\nimport cn from \"classnames\";\n\ntype InputProps = Omit<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  \"onChange\"\n> & {\n  /** Значение поля */\n  value?: string;\n  /** Callback, вызываемый при вводе данных в поле */\n  onChange: (value: string) => void;\n};\n\nconst Input: React.FC<InputProps> = ({ value, onChange, ...props }) => {\n  const classNameList = cn(\n    props[\"className\"],\n    props[\"disabled\"] ? \"input_disabled\" : null\n  );\n\n  const changeValue = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      onChange(event.target.value);\n    },\n    [onChange]\n  );\n\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      className={classNameList}\n      {...props}\n      onChange={changeValue}\n    />\n  );\n};\n\nexport default Input;\n","import React, { useCallback, useEffect } from \"react\";\n\nimport Button from \"@components/Button\";\nimport CardsList from \"@components/CardsList/CardsList\";\nimport ErrorReadDataMessage from \"@components/ErrorReadDataMessage\";\nimport Input from \"@components/Input/Input\";\nimport ROUTES from \"@config/routes\";\nimport rootStore from \"@store/RootStore\";\nimport { useCurrencyParamStore } from \"@store/RootStore/hooks/useCurrencyParamStore\";\nimport { useQueryParamsInit } from \"@store/RootStore/hooks/useQueryParamsInit\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\n\nimport styles from \"./Search.module.scss\";\n\nconst Search = () => {\n  useQueryParamsInit();\n  const navigate = useNavigate();\n\n  const handleCancelButton = useCallback(() => {\n    rootStore.query.destroy();\n    navigate(ROUTES.MARKET);\n  }, [navigate]);\n\n  const handleQuery = useCallback(\n    (value: string) => {\n      rootStore.query.setSearch(value);\n      navigate({\n        pathname: ROUTES.SEARCH,\n        search: rootStore.query.search,\n      });\n    },\n    [rootStore.query]\n  );\n\n  useEffect(() => {\n    const inputTimeout = setTimeout(handleQuery, 1000);\n    return () => clearTimeout(inputTimeout);\n  }, [rootStore.query]);\n\n  return (\n    <div className={styles[\"Search__main-div\"]}>\n      <div className={styles[\"Search__search-input\"]}>\n        <Input onChange={handleQuery} value={rootStore.query.search} />\n        <Button onClick={handleCancelButton}>Cancel</Button>\n      </div>\n      <div className={styles[\"Search__main-div_CardList-block\"]}>\n        <CardsList />\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import { useLocation } from \"react-router-dom\";\n\nimport rootStore from \"../instance\";\n\nexport const useQueryParamsInit = (): void => {\n  const { search } = useLocation();\n\n  rootStore.query.setSearch(search);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Search__main-div\":\"D1Y8iF1u5st07x_0pgL3\",\"Search__search-input\":\"h4YOR7WFBTusHP5LVFVL\",\"Search__main-div_CardList-block\":\"ip5KNgAuwGrpyqCQENFe\"};","import React from \"react\";\n\nimport ROUTES from \"@config/routes\";\nimport CoinsCard from \"@pages/CoinsCard\";\nimport Market from \"@pages/Market\";\nimport Search from \"@pages/Search\";\nimport { BrowserRouter, Routes, Navigate, Route } from \"react-router-dom\";\n\nimport styles from \"./App.module.scss\";\n\nfunction App() {\n  return (\n    <div className={styles[\"App__Main-div\"]}>\n      <BrowserRouter>\n        <Routes>\n          <Route path={ROUTES.MARKET} element={<Market />} />\n          <Route path={ROUTES.SEARCH} element={<Search />} />\n          <Route path={ROUTES.COINS_CARD} element={<CoinsCard />} />\n          <Route path=\"*\" element={<Navigate to={ROUTES.MARKET} />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// extracted by mini-css-extract-plugin\nexport default {\"App__Main-div\":\"x_yUXMQlAkeHC5BsgUuv\"};","import React from \"react\";\n\nimport ReactDOM from \"react-dom/client\";\n\nimport App from \"./App\";\n\nimport \"@styles/global.scss\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(<App />);\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"names":["LoaderSize","image","title","subtitle","content","onClick","refEndFunction","ref","className","src","alt","Meta","loading","size","m","cn","version","baseProfile","width","height","xmlns","fill","strokeWidth","cx","cy","r","stroke","strokeDasharray","strokeDashoffset","id","timing","currency","chartContainerRef","useRef","useState","setLoading","graphValue","setGraphValue","error","setError","getSparklineData","useCallback","prepareData","prices","resultData","time","Date","setTime","now","i","push","value","Math","round","getTime","forEach","el","url","axios","result","status","data","Object","keys","length","err","useEffect","catch","current","chart","createChart","applyOptions","timeScale","timeVisible","secondsVisible","addLineSeries","lineWidth","color","setData","fitContent","PeriodTypes","All","onChange","activePeriod","setActivePeriod","changeActiveState","newActive","styles","map","key","CoinsCardStore","_loading","_error","_coinMainData","_actualDatePeriod","makeObservable","this","observable","computed","coinMainData","actualDatePeriod","fetchData","action","getCoinInformation","runInAction","console","log","CurrencyAndSortTypeParamsStore","_currencyList","_selectedCurrencyList","_selectedCurrencySymbol","_selectedSortType","prepareCurrencyDate","getCurrencyList","selectedSortType","selectedCurrencyList","then","string","localStorage","getItem","JSON","parse","counter","j","getSymbolFromCurrency","userCurrencyList","toUpperCase","method","newCurrencyList","e","newSortType","newList","setItem","stringify","QueryParamsStore","_params","_search","setSearch","search","startsWith","slice","qs","RootStore","query","coinsOnePageCoinsCount","useCurrencyParamStore","rootStore","useLocalStore","creator","container","destroy","observer","handleCurrency","coinsCardStore","useParams","navigate","useNavigate","handleReturnNavigate","fetch","changeActualDatePeriod","newPeriod","hasOwnProperty","toFixed","priceChangePercentage","sparklineIn7d","currencySymbol","price","rightPriceScale","visible","overlayPriceScales","grid","vertLines","horzLines","lineSerial","crosshairMarkerVisible","baseLineVisible","priceLineVisible","lastValueVisible","crosshair","vertLine","labelVisible","horzLine","handleScale","handleScroll","setVisibleLogicalRange","from","to","remove","concat","toString","isVisible","coinsList","handleCoins","handleCoinNavigate","symbol","onePageCountCoins","endList","prepareSparklineData","index","useWindowScroll","endReached","undefined","overscan","itemContent","coin","components","Footer","ButtonColor","normalizeLostData","getInformation","getLostData","price_change_percentage_24h","sparkline_in_7d","current_price","assign","CoinsListStore","_list","_meta","initial","_page","_listEnd","list","meta","page","listEnd","initCoins","getCoinsList","Error","params","filter","element","includes","success","coinsListStore","currencyRootStore","getNewCardPath","state","pathname","ROUTES","something","style","display","flexDirection","selectedCurrencySymbol","sortType","handleSortType","sortTypes","Gainer","Looser","MultiDropdownButton","disabled","actualValueString","React","MultiDropdown","options","pluralizeOptions","setVisible","setValueString","handleActualValueString","handleValueList","indexOf","handleVisible","memo","capChangePercentage","handleSearchNavigate","location","handleSelectedCurrency","handleValueResult","reduce","accumulator","currentValue","currencyList","MarketStore","_dailyMarketChange","dailyMarketChange","market_cap_change_percentage_24h_usd","currencyAndSortStore","marketStore","primary","children","props","resultClassNameList","useMemo","classNameList","changeValue","event","target","type","useLocation","handleCancelButton","handleQuery","inputTimeout","setTimeout","clearTimeout","path","ReactDOM","document","getElementById","render"],"sourceRoot":""}